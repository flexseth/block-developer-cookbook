<?php
/**
 * Plugin Name:       {{title}}
{{#pluginURI}}
 * Plugin URI:        {{{pluginURI}}}
{{/pluginURI}}
{{#description}}
 * Description:       {{description}}
{{/description}}
 * Requires at least: 6.4
 * Requires PHP:      7.0
 * Version:           {{version}}
{{#author}}
 * Author:            {{author}}
{{/author}}
{{#license}}
 * License:           {{license}}
{{/license}}
{{#licenseURI}}
 * License URI:       {{{licenseURI}}}
{{/licenseURI}}
 * Text Domain:       {{textdomain}}
{{#domainPath}}
 * Domain Path:       {{{domainPath}}}
{{/domainPath}}
{{#updateURI}}
 * Update URI:        {{{updateURI}}}
{{/updateURI}}
 *
 * @package           {{namespace}}
 */

namespace BlockDevelopersCookbook;

if ( ! defined( 'ABSPATH' ) ) {
	exit; // Exit if accessed directly.
}

/**
 * Registers the block using the metadata loaded from the `block.json` file.
 * Behind the scenes, it registers also all assets so they can be enqueued
 * through the block editor in the corresponding context.
 *
 * @see https://developer.wordpress.org/reference/functions/register_block_type/
 */
function {{slugSnakeCase}}_block_init() {
	register_block_type_from_metadata( __DIR__ . '/build' );
}
add_action( 'init', __NAMESPACE__ . '\{{slugSnakeCase}}_block_init' );
{{#isCompletedVariant}}

/**
 * Filter the render_block to add the needed directives to the inner cover blocks.
 */
function {{slugSnakeCase}}_add_directives_to_inner_blocks( $block_content ) {
	$allowed_blocks = array( 'wp-block-cover', 'wp-block-image', 'wp-block-media-text' );
	$covers         = new \WP_HTML_Tag_Processor( $block_content );

	while ( $covers->next_tag() ) {
		// Retrieve and iterate over the classes assigned.
		foreach ( $covers->class_list() as $class_name ) {
			if ( in_array( $class_name, $allowed_blocks, true ) ) {
				$covers->set_attribute( 'data-wp-interactive', '{ "namespace":"{{slug}}" }' );
				$covers->set_attribute( 'data-wp-init', 'callbacks.initSlide' );
				continue;
			}
		}
	}
	$block_content = $covers->get_updated_html();
	return $block_content;
}
add_filter( 'render_block_{{namespace}}/{{slug}}', __NAMESPACE__ . '\{{slugSnakeCase}}_add_directives_to_inner_blocks' );
{{/isCompletedVariant}}
