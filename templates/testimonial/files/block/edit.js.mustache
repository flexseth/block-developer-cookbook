/**
 * WordPress Dependencies
 */
import { __ } from '@wordpress/i18n';
import { useBlockProps, RichText } from '@wordpress/block-editor';
{{#isCompletedVariant}}
import { useEntityProp } from '@wordpress/core-data';
{{/isCompletedVariant}}

/**
 * The edit function describes the structure of your block in the context of the
 * editor. This represents what the editor will render when the block is used.
 *
 * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit
 *
 * @param {*} param0
 * @return {WPElement} Element to render.
 */
export default function Edit( {
	attributes: { authorName },
	setAttributes,
	{{#isCompletedVariant}}
	context: { postType, postId },
	{{/isCompletedVariant}}
} ) {
	{{#isCompletedVariant}}
	const [ meta, updateMeta ] = useEntityProp(
		'postType',
		postType,
		'meta',
		postId
	);
	const { testimonial } = meta;
	{{/isCompletedVariant}}


	return (
		<blockquote { ...useBlockProps() }>
			{{#isStartVariant}}
				<RichText
					placeholder={ __(
						'Testimonial goes here',
						'block-developer-cookbook'
					) }
					tagName="p"
					value={ 'Testimonial content goes here' }
					onChange={ ( newTestimonialContent ) => {} }
				/>
			{{/isStartVariant}}
			{{#isCompletedVariant}}
			<RichText
				placeholder={ __(
					'Testimonial goes here',
					'block-developer-cookbook'
				) }
				tagName="p"
				value={ testimonial }
				onChange={ ( newTestimonialContent ) =>
					updateMeta( {
						...meta,
						testimonial: newTestimonialContent,
					} )
				}
			/>
			{{/isCompletedVariant}}
			<cite>
				<RichText
					tagName="span"
					placeholder={ __(
						'Author name',
						'block-developer-cookbook'
					) }
					allowedFormats={ [] }
					disableLineBreaks
					value={ authorName }
					onChange={ ( newAuthorName ) =>
						setAttributes( { authorName: newAuthorName } )
					}
				/>
			</cite>
		</blockquote>
	);
}
